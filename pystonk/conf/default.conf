{
  # register account with https://developer.schwab.com/ and create an app to get a client id (app key) and secret (app secret)
  app_key = ${PYSTONK_SCHWAB_KEY}
  app_secret = ${PYSTONK_SCHWAB_SECRET}

  aws {
    region = "us-east-1"
    region = ${?PYSTONK_AWS_REGION}
    lambda_arn = "arn"
    lambda_arn = ${?PYSTONK_AWS_LAMBDA_ARN}
  }

  slack {
    token = ${PYSTONK_SLACK_TOKEN}
    secret = ${PYSTONK_SLACK_SECRET}
    port = 3000
    lambda = True

    emojis {
      success = ":+1: :clap: :heart_hands: :muscle: :tada: :confetti_ball: :hearts: :white_check_mark:"
      success = ${?PYSTONK_SLACK_SUCCESS_EMOJIS}
      fail = ":-1: :pinched_fingers: :middle_finger: :no_entry_sign: :x: :hankey: :skull_and_crossbones:"
      fail = ${?PYSTONK_SLACK_FAIL_EMOJIS}
    }
  }

  log {
    version = 1
    disable_existing_loggers = False

    formatters {
      standard {
        format = "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
        datefmt = "%Y-%m-%d %H:%M:%S"
      }
    }

    handlers {
      console {
        class = "logging.StreamHandler"
        formatter = "standard"
      }
    }

    loggers {
      root {
        handlers = ["console"]
        level = ERROR
        level = ${?PYSTONK_LOG_LEVEL}
        propagate = True
      }

      pystonk {
        handlers = ["console"]
        level = ERROR
        level = ${?PYSTONK_LOG_LEVEL}
        propagate = False
      }
    }
  }
}